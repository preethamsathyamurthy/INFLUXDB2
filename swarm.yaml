version: "3.5"

networks:
  network:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.255.0/24

configs:
 telegraf_global:
   file: ./configs/telegraf_global.conf
 telegraf:
   file: ./configs/telegraf.conf

services:
  influxdb2:
    image: influxdb:latest
    networks:
      network:
        aliases:
          - influxdb2
    # network_mode: "bridge"
    container_name: influxdb2
    ports:
      # - "80:8086"
      - "8086:8086"
    volumes:
      # - type: bind
      #   source: ./test/config
      #   target: /var/lib/influxdb2:rw
      - type: volume
        source: influx
        target: /var/lib/influxdb2:rw
      # - type: bind
      #   source: /Users/preetham/Documents/DockerSwarm/influxdb2/test/influxdbdata
      #   target: /etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=root
      - DOCKER_INFLUXDB_INIT_PASSWORD=c0mpl1cat3d
      - DOCKER_INFLUXDB_INIT_ORG=preeth
      - DOCKER_INFLUXDB_INIT_BUCKET=monitoring
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=YpF7dmX0eY
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 100M
  telegraf_nodes:
    image: telegraf:latest
    user: telegraf:1000
    networks:
      - network
    pid: "host"
    hostname: "{{.Node.ID}}"
    ports:
      - "8092:8092"
      - "8094:8094"
      - "8125:8125"
    volumes:
      # - ./configs/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro
      - /etc:/host/etc:ro
    configs:
      - source: telegraf_global
        target: /etc/telegraf/telegraf.conf
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    restart: always
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 100M
  telegraf:
    image: telegraf:latest
    user: telegraf:1000
    networks:
      - network
    pid: "host"
    hostname: "{{.Node.ID}}"
    ports:
      - "8082:8092"
      - "8084:8094"
      - "8185:8125"
    volumes:
      # - ./configs/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /sys:/host/sys:ro
      # - /proc:/host/proc:ro
      # - /etc:/host/etc:ro
    configs:
      - source: telegraf
        target: /etc/telegraf/telegraf.conf
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 100M
  grafana8:
    image: grafana/grafana:latest
    networks:
      network:
        aliases:
          - grafana
    container_name: grafana8
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "4000:3000"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 100M

volumes:
  influx:
  grafana:
